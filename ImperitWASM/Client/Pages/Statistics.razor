@inject IClient http;
@inject SessionService storage;

@using Mode = Data.View;

@code{
	[Parameter] public Func<Task>? LogoutAsync { get; set; }
	[Parameter] public Action<Mode, int?, int?, Data.PlayerInfo?> Switch { get; set; } = ((a, x, y, z) => { });
	ImmutableArray<Data.PlayerInfo> Players;
	ImmutableArray<Powers> Powers;
	int Active = 0;
	System.Timers.Timer PowersTimer = new System.Timers.Timer { Interval = 1000, AutoReset = false };

	void Clicked(int player)
	{
		if (player != storage.Player && Players[storage.Player].M > 0)
		{
			Switch(Mode.Donation, null, null, Players.Try(player));
		}
	}
	async Task DoGiveUp()
	{
		await http.PostAsync("api/Command/GiveUp", storage.Session);
		await LogoutAsync!();
	}
	async Task LoadPowersAsync()
	{
		Powers = await http.PostAsync<int, ImmutableArray<Powers>>("api/Powers/List", storage.GameId);
		StateHasChanged();
	}
	protected override async Task OnInitializedAsync()
	{
		Active = await http.PostAsync<int, int>("api/Game/Active", storage.GameId);
		Players = await http.PostAsync<int, ImmutableArray<Data.PlayerInfo>>("api/Player/Infos", storage.GameId);

		PowersTimer.Elapsed += async (s, e) => await LoadPowersAsync();
		PowersTimer.Start();
	}
	string StarsOf(int i) => Powers.IsDefaultOrEmpty ? string.Empty : Sym.Stars(Powers[^1][i].Final);
}
<nav>
	<a @onclick="() => Switch(Mode.Map, null, null, null)">Zpět</a>
	<a class="this">@Players.Try(storage.Player)?.M@Sym.Money</a>
</nav>
<main>
	@if (!Players.IsDefaultOrEmpty)
	{
		<p>Na tahu je: <span style="color:@Players[Active].C;">@Players[Active].N</span></p>
		<table class="players">
			@foreach (var (i, name, color, alive, money, debt, income) in Players)
			{
				<tr @onclick="() => Clicked(i)">
					<td style="color:@color;">@name@StarsOf(i)</td>
					@if (alive)
					{
						<td>@money@Sym.Money</td>
						<td>(+@income@Sym.Money)</td>
						<td>
							@if (debt > 0)
							{
								<text>-@debt@Sym.Money</text>
							}
						</td>
					}
					else
					{
						<td colspan="3">není</td>
					}
				</tr>
			}
		</table><br/>
		<button @onclick="DoGiveUp">Vzdát se</button>
	}
	@if (!Players.IsDefaultOrEmpty && !Powers.IsDefaultOrEmpty)
	{
		<Graphs Players="Players.Select(p => p.C).ToImmutableArray()" Powers="Powers"/>
	}
</main>